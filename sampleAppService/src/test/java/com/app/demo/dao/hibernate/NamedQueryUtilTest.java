/*
 * (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-backend:src/test/java/hibernate/NamedQueryUtilTest.p.vm.java
 */
package com.app.demo.dao.hibernate;

import java.util.*;

import org.apache.log4j.Logger;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.transaction.annotation.Transactional;

import com.app.demo.dao.support.*;
import com.app.demo.util.*;
import com.app.demo.context.*;
import com.app.demo.domain.Person;
import com.app.demo.domain.Role;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = { "classpath*:spring/applicationContext-test.xml" })
@Transactional
public class NamedQueryUtilTest {

    private static final Logger log = Logger.getLogger(NamedQueryUtilTest.class);

    @Autowired
    private NamedQueryUtil namedQueryUtil;

    @Test
    @SuppressWarnings("unchecked")
    public void executeQetAllAccountsQueryName() {
        String sqlQuery = "Person.selectAll";
        List<Person> accounts = (List<Person>) namedQueryUtil.findByNamedQuery(new SearchTemplate()
                .setNamedQuery(sqlQuery));

        if (accounts != null) {
            log.info(accounts.size());

            for (Person account : accounts) {
                log.info(account.toString());
            }
        }
    }

    @Test
    @SuppressWarnings("unchecked")
    public void executeGetAllAccountsSqlQuery() {
        String sqlQuery = "Person.selectAll.native";
        List<Person> accounts = (List<Person>) namedQueryUtil.findByNamedQuery(new SearchTemplate()
                .setNamedQuery(sqlQuery));

        if (accounts != null) {
            log.info(accounts.size());
            for (Person account : accounts) {
                log.info(account.toString());
            }
        }
    }

}